name: oxid module tests

on: [push]

env:
  PHP: '7.4'

jobs:
  install_shop_with_module:
    runs-on: ubuntu-latest
    steps:
      - name: Clone development environment v3.0.0
        run: git clone https://github.com/Fresh-Advance/development . && git reset --hard v3.0.0

      - name: Clone the shop
        run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-6.4.x --single-branch source

      - name: Cache current installation
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ env.PHP }}-${{ github.sha }}

      - name: Prepare container configuration
        run: |
          make setup
          make addbasicservices
          sed "s/PHP_VERSION=.*/PHP_VERSION='${{ env.PHP }}'/" -i .env
          sed "s/display_errors =.*/display_errors = false/" -i containers/php-fpm/custom.ini
          sed -i -e "s+/var/www/+/var/www/source/+" containers/httpd/project.conf

      - name: Prepare shop configuration
        run: |
          cp source/source/config.inc.php.dist source/source/config.inc.php
          sed -i -e 's/<dbHost>/mysql/'\
                 -e 's/<dbUser>/root/'\
                 -e 's/<dbName>/example/'\
                 -e 's/<dbPwd>/root/'\
                 -e 's/<dbPort>/3306/'\
                 -e 's/<sShopURL>/http:\/\/localhost.local\//'\
                 -e 's/<sShopDir>/\/var\/www\/source\//'\
                 -e 's/<sCompileDir>/\/var\/www\/source\/tmp\//'\
              source/source/config.inc.php

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Install dependencies
        run: docker-compose exec -T php composer update --no-interaction

      - name: Checkout current module
        uses: actions/checkout@v3
        with:
          path: source/test-module

      - name: Install module
        run: |
          docker-compose exec -T \
            php composer config repositories.oxid-solution-catalysts/unzer \
            --json '{"type":"path", "url":"./test-module", "options": {"symlink": true}}'
          docker-compose exec -T php composer require oxid-solution-catalysts/unzer:*

      - name: Reset shop
        run: docker-compose exec -T php vendor/bin/reset-shop

      - name: Put module settings
        continue-on-error: true
        run: |
          mkdir -p source/var/configuration/environment/
          echo "${{ secrets.MODULE_SETTINGS }}" > source/var/configuration/environment/1.yaml
          docker-compose exec -T php php bin/oe-console oe:module:apply-configuration

      - name: Stop containers
        run: |
          make down
          sleep 2

  unit_tests:
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ env.PHP }}-${{ github.sha }}
          restore-keys: |
            shopInstallation-${{ env.PHP }}-${{ github.sha }}

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Run tests
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=osc/unzer \
            -e ACTIVATE_ALL_MODULES=1 \
            -e RUN_TESTS_FOR_SHOP=0 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e XDEBUG_MODE=coverage \
            -e ADDITIONAL_TEST_PATHS='/var/www/vendor/oxid-solution-catalysts/unzer/Tests' \
            php php vendor/bin/runtests \
              --coverage-clover=/var/www/coverage.xml \
              --coverage-text \
              --log-junit=/var/www/phpunit.xml \
              AllTestsUnit

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestsLog
          path: |
            source/coverage.xml
            source/phpunit.xml

  codeception_tests:
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ env.PHP }}-${{ github.sha }}
          restore-keys: |
            shopInstallation-${{ env.PHP }}-${{ github.sha }}

      - name: Start containers
        run: |
          make file=services/selenium-chrome.yml addservice
          make up
          sleep 2

      - name: Run tests
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=osc/unzer \
            -e ACTIVATE_ALL_MODULES=1 \
            -e RUN_TESTS_FOR_SHOP=0 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e ADDITIONAL_TEST_PATHS='/var/www/vendor/oxid-solution-catalysts/unzer/Tests' \
            php php vendor/bin/runtests-codeception

  styles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current module
        uses: actions/checkout@v3
        with:
          path: source/test-module

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP }}
          coverage: xdebug

      - name: Install module dependencies
        run: |
          cd source/test-module
          composer install

      - name: Run psalm
        run: |
          cd source/test-module
          php vendor/bin/psalm --show-info=true --no-cache --report=logs/psalm.sonarqube.json

      - name: Run phpcs
        if: always()
        run: |
          cd source/test-module
          composer phpcs

      - name: Save psalm logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestsLog
          path: source/test-module/logs/psalm.sonarqube.json

  sonarcloud:
    needs: [ unit_tests, styles ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout current module
        uses: actions/checkout@v3

      - name: Download fixed artifacts
        uses: actions/download-artifact@v3
        with:
          name: TestsLog
          path: ./logs/

      - name: Fix paths in unit logs
        run: |
          sed -i 's+/var/www/test-module/++' logs/coverage.xml
          sed -i 's+/var/www/test-module/++' logs/phpunit.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=oxid-esales
            -Dsonar.projectKey=OXID-eSales_unzer-module
            -Dsonar.projectVersion=0.1.0
            -Dsonar.sources=src
            -Dsonar.tests=Tests
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.php.coverage.reportPaths=logs/coverage.xml
            -Dsonar.cpd.php.minimumTokens=30
            -Dsonar.cpd.php.minimumLines=6
            -Dsonar.php.tests.reportPath=logs/phpunit.xml
            -Dsonar.php.psalm.reportPaths=logs/psalm.sonarqube.json
