services:

  _defaults:
    public: false
    autowire: true
    bind:
      OxidEsales\Eshop\Core\Config: '@=service("OxidSolutionCatalysts\\Unzer\\Core\\Registry").getConfig()'
      OxidEsales\Eshop\Core\Session: '@=service("OxidSolutionCatalysts\\Unzer\\Core\\Registry").getSession()'
      OxidEsales\Eshop\Core\Language: '@=service("OxidSolutionCatalysts\\Unzer\\Core\\Registry").getLang()'
      OxidEsales\Eshop\Core\UtilsDate: '@=service("OxidSolutionCatalysts\\Unzer\\Core\\Registry").getUtilsDate()'
      OxidEsales\Eshop\Core\Request: '@=service("OxidSolutionCatalysts\\Unzer\\Core\\Registry").getRequest()'

  OxidSolutionCatalysts\Unzer\Core\Registry:
    class: OxidEsales\Eshop\Core\Registry
    public: true

  OxidSolutionCatalysts\Unzer\Logger:
    class: Monolog\Logger
    factory: ['@OxidSolutionCatalysts\Unzer\Logger\Factory', 'create']
    public: true

  OxidSolutionCatalysts\Unzer\Logger\Factory:
    class: OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory
    public: true
    arguments:
      $configuration: '@OxidSolutionCatalysts\Unzer\Logger\Configuration'

  OxidSolutionCatalysts\Unzer\Logger\Configuration:
    class: OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration
    public: true
    arguments:
      $loggerName: 'Unzer Payment Logger'
      $logFilePath: '@=service("OxidSolutionCatalysts\\Unzer\\Service\\Context").getUnzerLogFilePath()'
      $logLevel: !php/const Psr\Log\LogLevel::INFO

  OxidSolutionCatalysts\Unzer\Core\Response:
    public: true

  OxidSolutionCatalysts\Unzer\Service\:
    resource: 'src/Service/*'
    public: true

  OxidSolutionCatalysts\Unzer\Service\DebugHandler:
    class: OxidSolutionCatalysts\Unzer\Service\DebugHandler
    public: true
    arguments:
      $moduleLogger: '@OxidSolutionCatalysts\Unzer\Logger'