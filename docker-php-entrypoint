#!/bin/sh
set -e

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
   set -- apache2-foreground "$@"
fi

#check if db container is ready
while ! mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e 'SHOW GLOBAL STATUS LIKE "Uptime"' --connect_timeout=10; do sleep 10; echo "DB not ready"; done

# bootstrap oxid database/demodata
MYSQL_CHECKDATA=`mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} --skip-column-names -e "SHOW TABLES FROM ${MYSQL_DATABASE} LIKE 'oxconfig'"`
if [ "${MYSQL_CHECKDATA}" = "" ]
then
   mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} < /var/www/oxideshop/source/Setup/Sql/database_schema.sql
   echo "db schema created"
   mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e "UPDATE oxshops SET OXSMTP = 'mailhog:1025', OXSMTPUSER = '', OXSMTPPWD = '' WHERE oxid = 1;"
   php /var/www/oxideshop/vendor/bin/oe-eshop-doctrine_migration migrations:migrate
   if [ "${OXID_EDITION}" = "b2b" ]
   then
   mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} < /var/www/oxideshop/vendor/oxid-esales/oxideshop-demodata-ee/src/demodata.sql
   else
   mysql -h ${MYSQL_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} < /var/www/oxideshop/vendor/oxid-esales/oxideshop-demodata-${OXID_EDITION}/src/demodata.sql
   fi
   php /var/www/oxideshop/vendor/bin/oe-eshop-db_views_regenerate
   echo "demodata installed"

fi

if [ "${HTA_USER}" != test ] && [ "${HTA_PW}" != test ]
then
echo 'AuthType Basic\nAuthName "Passwortgeschï¿½tzter Bereich"\nAuthUserFile /var/www/oxideshop/.htpasswd\nRequire valid-user' >> /var/www/oxideshop/source/.htaccess
echo 'Order deny,allow\nDeny from all\nAllow from 3.120.62.83,18.196.35.212,35.157.10.171,18.197.240.190\nSatisfy any' >> /var/www/oxideshop/source/.htaccess
htpasswd -bc /var/www/oxideshop/.htpasswd ${HTA_USER} ${HTA_PW}
fi

rm -rf /var/www/oxideshop/source/Setup/
chmod 444 /var/www/oxideshop/source/config.inc.php
chmod 444 /var/www/oxideshop/source/.htaccess
chown -R www-data:www-data /var/www/oxideshop/
sed -i "s/.*oView->getShopFullEdition.*/Enterprise Edition/" /var/www/oxideshop/source/Application/views/admin/tpl/header.tpl
echo "EE Fake done."

php /var/www/oxideshop/vendor/bin/oe-eshop-doctrine_migration migrations:migrate;

#to be able to have a default configuration, the server does have a mount of the default config file to
#/var/www/oxideshop/var/configuration/environment/1.yaml.default. that is why I copy this file for oxid,
#so oxid admin still works when saving configuration but it will be overwritten on deployment
mkdir -p /var/www/oxideshop/var/configuration/environment
awk -v SANDBOXUNZERPUBLICKEY="$SANDBOXUNZERPUBLICKEY" -v SANDBOXUNZERRPRIVATEKEY="$SANDBOXUNZERRPRIVATEKEY" -v APPLEPAYMERCHANTIDENTIFIER="$APPLEPAYMERCHANTIDENTIFIER" -v APPLEPAYLABEL="$APPLEPAYLABEL" '{
    sub(/SANDBOXUNZERPUBLICKEY/, SANDBOXUNZERPUBLICKEY);
    sub(/SANDBOXUNZERRPRIVATEKEY/, SANDBOXUNZERRPRIVATEKEY);
    sub(/APPLEPAYMERCHANTIDENTIFIER/, APPLEPAYMERCHANTIDENTIFIER);
    sub(/APPLEPAYLABEL/, APPLEPAYLABEL);
    print;
}' /var/www/oxideshop/project-modules/module-under-test/docker-var_configuration_environment_1.yaml > /var/www/oxideshop/var/configuration/environment/1.yaml
chown -R www-data:www-data /var/www/oxideshop/var/configuration/

mkdir -p /var/www/oxideshop/var/module/osc-unzer/certs
cp /var/www/oxideshop/project-modules/module-under-test/docker-applepay_merchant_cert_key /var/www/oxideshop/var/module/osc-unzer/certs/.applepay_merchant_cert_key.sandbox.1
echo $APPLEPAYMERCHANTCERTKEY | base64 --decode > /var/www/oxideshop/var/module/osc-unzer/certs/.applepay_merchant_cert_key.sandbox.1
cp /var/www/oxideshop/project-modules/module-under-test/docker-applepay_merchant_cert /var/www/oxideshop/var/module/osc-unzer/certs/.applepay_merchant_cert.sandbox.1
echo $APPLEPAYMERCHANTCERT | base64 --decode > /var/www/oxideshop/var/module/osc-unzer/certs/.applepay_merchant_cert.sandbox.1
chown -R www-data:www-data /var/www/oxideshop/var/module/osc-unzer/certs

/var/www/oxideshop/vendor/bin/oe-console oe:module:apply-configuration;

/var/www/oxideshop/vendor/bin/oe-console oe:module:activate osc-unzer;

echo "Setup done."

exec "$@"
