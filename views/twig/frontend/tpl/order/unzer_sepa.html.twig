{% include "@osc-unzer/frontend/tpl/order/unzer_assets.html.twig" %}

{% if unzerPaymentType != false  %}
    <div class="savedpayment">
        {% for type, setting in unzerPaymentType %}
            {% if type == 'sepa' %}
            <form id="payment-saved-cards" class="unzerUI form" novalidate>
                <table class="table">
                    <thead>
                    <tr>
                        <th scope="col">{{ translate({ ident: "OSCUNZER_HOLDER" }) }}</th>
                        <th scope="col">{{ translate({ ident: "OSCUNZER_IBAN" }) }}</th>
                        <th scope="col"></th>
                    </tr>
                    </thead>
                    <tbody>

                    {% for paymenttypeid, paymentType in setting %}
                        <tr>
                            <th scope="row">{{ paymentType.holder }}</th>
                            <td>{{ paymentType.iban }}</td>
                            <td>
                                <input type="radio" class="paymenttypeid" name="paymenttypeid" {% if loop.first %}checked{% endif %} value="{{ paymenttypeid }}"
                                       style="-webkit-appearance: radio">
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </form>
            {% endif %}
        {% endfor %}
    </div>
{% endif %}

{% if unzerPaymentType != false  %}
    <br>
        <label class="newiban">
            <input type="checkbox" name="newccard" id="newccard" value="show"  style="-webkit-appearance: checkbox"> Neue IBAN
        </label>
{% endif %}

<div id="newsepa" style="display:none;">

    <form id="payment-form-sepa">
        <br/>
        <div id="sepa-IBAN" class="field">
            <!-- The IBAN field UI Element will be inserted here -->
        </div>
        <br/>
        {% if oView.getPaymentSaveSetting() %}
        <div class="oscunzersavepayment" id="oscunzersavepayment_unzer">
            <input id="oscunzersavepayment" type="checkbox" name="oscunzersavepayment" value="0"
                   style="-webkit-appearance: checkbox">
            <label for="oscunzersavepayment">
                {{ translate({ ident: "OSCUNZER_SAVE_PAYMENT" }) }}
            </label>
        </div>
        {% endif %}
        <div class="field" id="error-holder" style="color: #9f3a38"></div>

    </form>
</div>
<div id="payment-sepa-confirm">
    <div class="sepaagreement" id="sepaagree_unzer">
        <input id="oscunzersepaagreement" type="checkbox" name="oscunzersepaagreement" value="0">
        <label for="oscunzersepaagreement">
                {% ifcontent ident "oscunzersepamandateconfirmation" set oCont %}
                    {% if oCont %}
                        {{ oCont.oxcontents__oxcontent.value|raw }}
                    {% endif %}
                {% endifcontent %}
                {% capture assign="sepaMadateJs" %}
                    {% ifcontent ident "oscunzersepamandatetext" set oCont2 %}
                        {% set param="plain=1" %}
                        {% set url = oCont2.getLink() ~ "?plain=1" %}
                        {%  if false %}<script>{% endif %}
                        function openAndModifyPopup() {
                            window.open(
                                "{{ url }}",
                                "sepa_popup",
                                "resizable=yes,status=no,scrollbars=yes,menubar=no,width=620,height=400"
                            );
                        }
                        {%  if false %}</script>{% endif %}
                    {% endifcontent %}
                {% endcapture %}
                {{ script({ add:sepaMadateJs, dynamic: __oxid_include_dynamic }) }}
        </label>
    </div>
</div>
{% capture assign = "unzerSepaDirectJS" %}
{% if false %}<script>{% endif %}
    function executeUnzerPayment(event) {
        event.stopPropagation();
        let zahlungsButton = event.currentTarget;
        zahlungsButton.disabled = true;
        document.getElementById('orderConfirmAgbBottom').submit();
    }

    let unzerInstance = new unzer('{{ unzerpub }}', { locale: "{{ unzerLocale }}" });
    let SepaDirectDebit = unzerInstance.SepaDirectDebit();

    if (document.querySelectorAll('input[name="paymenttypeid"]').length === 0) {
        document.getElementById('orderConfirmAgbBottom').classList.add('new-card-selected');
        document.getElementById('newsepa').style.display = 'block';
        document.querySelectorAll('.newiban').forEach(el => el.style.display = 'none');
        SepaDirectDebit.create('sepa-direct-debit', {
            containerId: 'sepa-IBAN'
        });
    } else {
        document.querySelectorAll('input[name="newccard"]').forEach(input => {
            input.addEventListener('change', function() {
                if (this.checked) {
                    document.getElementById('newsepa').style.display = 'block';
                    document.querySelectorAll('.savedpayment').forEach(el => el.style.display = 'none');
                    addElements(SepaDirectDebit);
                } else {
                    document.getElementById('newsepa').style.display = 'none';
                    document.querySelectorAll('.savedpayment').forEach(el => el.style.display = 'block');
                    removeCardElements();
                }
            });
        });
    }

    document.getElementById('orderConfirmAgbBottom').addEventListener('submit', function(event) {
        if (!this.classList.contains('submitable')) {
            event.preventDefault();
            document.querySelector('#payment-form-sepa').requestSubmit();
        }
    });

    document.getElementById('payment-form-sepa').addEventListener('submit', function(event) {
        let zahlungsButton = document.getElementById('submitOrder');
        event.preventDefault();
        let sepaConfirmationValue = document.getElementById('oscunzersepaagreement').checked ? '1' : '0';
        let hiddenInput1 = document.createElement('input');
        hiddenInput1.type = 'hidden';
        hiddenInput1.name = 'sepaConfirmation';
        hiddenInput1.value = sepaConfirmationValue;

        let checkedInput = document.querySelector('input[name=paymenttypeid]:checked');
        if (checkedInput) {
            let selectedPaymentTypeId = checkedInput.value;
            let paymentData = {
                id: selectedPaymentTypeId
            };
            let paymentDataString = JSON.stringify(paymentData);
            let hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'paymentData';
            hiddenInput.value = paymentDataString;
            document.querySelector('#orderConfirmAgbBottom')
                .classList
                .add("submitable")
                .appendChild(hiddenInput)
                .appendChild(hiddenInput1)
                .submit();
        }

        SepaDirectDebit.createResource()
            .then(function(result) {
                let hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'paymentData';
                hiddenInput.value = JSON.stringify(result);
                document.getElementById('orderConfirmAgbBottom').appendChild(hiddenInput);

                let hiddenInput2 = document.createElement('input');
                hiddenInput2.type = 'hidden';
                hiddenInput2.name = 'oscunzersavepayment';
                hiddenInput2.value = document.getElementById('oscunzersavepayment').checked ? '1' : '0';
                document.getElementById('orderConfirmAgbBottom').appendChild(hiddenInput).appendChild(hiddenInput1).appendChild(hiddenInput2);

                document.getElementById('orderConfirmAgbBottom').classList.add("submitable");
                document.getElementById("orderConfirmAgbBottom").submit();
            })
            .catch(function(error) {
                document.getElementById('error-holder').innerHTML = error.message;
                window.scrollTo({
                    top: document.getElementById("orderPayment").offsetTop - 150,
                    behavior: 'smooth'
                });
                zahlungsButton.disabled = false;
            });
    });

     document.querySelectorAll("#payment-form-sepa input").forEach(function(element) {
        element.addEventListener("input", function() {
            document.querySelector('#error-holder').innerHTML = '';
            document.querySelector("#submitOrder").classList.add("submitable");
            document.querySelector("#submitOrder").disabled = false;
        });
     });

    function removeCardElements() {
        document.getElementById('sepa-IBAN').innerHTML = '';
    }

    function addElements(SepaDirectDebit) {
        SepaDirectDebit.create('sepa-direct-debit', {
            containerId: 'sepa-IBAN'
        });
    }

{% if false %}</script>{% endif %}
{% endcapture %}
{{ script({ add: unzerSepaDirectJS, dynamic: __oxid_include_dynamic }) }}
