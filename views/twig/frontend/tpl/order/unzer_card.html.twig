{% include "@osc-unzer/frontend/tpl/order/unzer_assets.html.twig" %}
{% if unzerPaymentType %}
<div class="savedpayment">
    {% for type, setting in unzerPaymentType %}
    {% if type != 'paypal' and type != 'sepa' %}
    <form id="payment-saved-cards" class="unzerUI form" novalidate>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">{{ translate({ ident: "OSCUNZER_CARD_NUMBER" }) }}</th>
                <th scope="col">{{ translate({ ident: "OSCUNZER_EXPIRY_DATE" }) }}</th>
                <th scope="col">{{ translate({ ident: "OSCUNZER_BRAND" }) }}</th>
                <th scope="col"></th>
            </tr>
            </thead>
            <tbody>
            {% set counter = 0 %}


            {% for paymenttypeid, paymentType in setting %}
                <tr>
                    <th scope="row">{{ paymentType.number }}</th>
                    <td>{{ paymentType.expiryDate }}</td>
                    <td>{{ type }}</td>

                    <td>
                        <input type="radio" class="paymenttypeid" name="paymenttypeid" value="{{ paymenttypeid }}" {% if loop.first %}checked{% endif %} style="-webkit-appearance: radio">
                    </td>
                </tr>
            {% endfor %}


            </tbody>
        </table>
    </form>
    {% endif %}
    {% endfor %}
</div>
    {% endif %}

{% if unzerPaymentType != false  %}
<br>
    <label>
        <input type="checkbox" name="newccard" id="newccard" value="show"  style="-webkit-appearance: checkbox"> Neue Kreditkarte
    </label>
{% endif %}
<div id="newcc" style="display:none;" class="card-body">
    <form id="payment-form-card" class="unzerUI form" novalidate>

        <div class="field">
            <div id="card-element-id-number" class="unzerInput">
                <!-- Card number UI Element will be inserted here. -->
            </div>
        </div>
        <div class="two fields">
            <div class="field ten wide">
                <div id="card-element-id-expiry" class="unzerInput">
                    <!-- Card expiry date UI Element will be inserted here. -->
                </div>
            </div>
            <div class="field six wide">
                <div id="card-element-id-cvc" class="unzerInput">
                    <!-- Card CVC UI Element will be inserted here. -->
                </div>
            </div>

        </div>
        {% if oView.getPaymentSaveSetting() %}
        <div id="payment-sepa-confirm">
            <div class="oscunzersavepayment" id="oscunzersavepayment_unzer">
                <input id="oscunzersavepayment" type="checkbox" name="oscunzersavepayment" value="0" style="-webkit-appearance: checkbox">
                <label for="oscunzersavepayment">
                    {{ translate({ ident: "OSCUNZER_SAVE_PAYMENT" }) }}
                </label>
            </div>
        </div>
        {% endif %}

    </form>
</div>
<style>
    .unzerUI.form .field.error .compact.error.message:not(:empty), .unzerUI.form .fields.error .field .compact.error.message:not(:empty){
        line-height: 100%;
    }
</style>

{% if false %}<script>{% endif %}
{% capture assign = "unzerCardJS" %}
    function executeUnzerPayment(event) {
        event.stopPropagation();
        let zahlungsButton = event.currentTarget;
        zahlungsButton.disabled = true;
        document.getElementById('orderConfirmAgbBottom').submit();
    }

    document.getElementById("orderConfirmAgbBottom").addEventListener("submit", function(event) {
        if (!this.classList.contains("submitable")) {
            event.preventDefault();
            document.getElementById("payment-form-card").requestSubmit();
        }
    });

    let unzerInstance = new unzer('{{ unzerpub }}', { locale: "{{ unzerLocale }}" });
    let Card = unzerInstance.Card();

    if (document.querySelectorAll('input[name="newccard"]').length === 0) {
        document.getElementById('orderConfirmAgbBottom').classList.add('new-card-selected');
        document.getElementById('newcc').style.display = 'block';
        addPaymentElements(Card);
    } else {
        document.querySelectorAll('input[name="newccard"]').forEach(input => {
            input.addEventListener('change', function() {
                if (this.checked) {
                    document.querySelector('.savedpayment').style.display = 'none';
                    document.querySelectorAll('input[name="paymenttypeid"]').forEach(input => {
                        input.checked = false;
                    });

                    document.getElementById('newcc').style.display = 'block';
                    addPaymentElements(Card);
                } else {
                    document.querySelector('.savedpayment').style.display = 'block';
                    document.getElementById('newcc').style.display = 'none';
                    removeCardElements();
                    if (Card && Card.destroy) {
                        Card.destroy();
                    }
                }
            });
        });
    }


    document.getElementById('payment-form-card').addEventListener('submit', function(event) {
        let zahlungsButton = document.querySelector('#submitOrder');
        event.preventDefault();
        let checkedInput = document.querySelector('input[name=paymenttypeid]:checked');
        if (checkedInput) {
            let selectedPaymentTypeId = checkedInput.value;
            let paymentData = {
                id: selectedPaymentTypeId
            };
            let paymentDataString = JSON.stringify(paymentData);
            let hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'paymentData';
            hiddenInput.value = paymentDataString;
            let form = document.getElementById('orderConfirmAgbBottom');
            form.classList.add("submitable")
            form.appendChild(hiddenInput)
            form.submit();
        } else {
            Card.createResource()
                .then(function(result) {
                    let hiddenInput = document.createElement('input');
                    hiddenInput.type = 'hidden';
                    hiddenInput.name = 'paymentData';
                    hiddenInput.value = JSON.stringify(result);
                    let hiddenInput2 = document.createElement('input');
                    hiddenInput2.type = 'hidden';
                    hiddenInput2.name = 'oscunzersavepayment';
                    hiddenInput2.value = document.getElementById('oscunzersavepayment').checked ? '1' : '0';

                    let form = document.getElementById('orderConfirmAgbBottom');
                    form.classList.add("submitable")
                    form.appendChild(hiddenInput)
                    form.appendChild(hiddenInput2)
                    form.submit();
                })
                .catch(function(error) {
                    console.error('error' + error.message);

                    window.scrollTo({
                        top: document.getElementById("orderPayment").offsetTop - 150,
                        behavior: 'smooth'
                    });

                    let errorField = document.getElementById("card-element-id-number");
                    let errorDiv = errorField.querySelector('div');
                    errorDiv.classList.add('error');
                    let errorEl = errorField.querySelector('div.error.message');
                    errorEl.style.display = 'inline-block';
                    errorEl.textContent = error.message;
                    zahlungsButton.disabled = false;
                    document.getElementById('submitOrder').disabled = false;
                })
        }
    });

    function addPaymentElements(Card) {
        // Clear the contents of the Card-Element containers
        Card.create('number', {
            containerId: 'card-element-id-number',
            onlyIframe: false
        });
        Card.create('expiry', {
            containerId: 'card-element-id-expiry',
            onlyIframe: false
        });
        Card.create('cvc', {
            containerId: 'card-element-id-cvc',
            onlyIframe: false
        });
    }

    function removeCardElements() {
        // Clear the contents of the Card-Element containers
        document.getElementById('card-element-id-number').innerHTML = '';
        document.getElementById('card-element-id-expiry').innerHTML = '';
        document.getElementById('card-element-id-cvc').innerHTML = '';
    }

{% endcapture %}
{% if false %}</script>{% endif %}
{{ script({ add: unzerCardJS, dynamic: __oxid_include_dynamic }) }}
