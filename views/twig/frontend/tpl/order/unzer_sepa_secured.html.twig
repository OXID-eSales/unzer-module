{% include "@osc-unzer/frontend/tpl/order/unzer_assets.html.twig" %}
{% set invadr = oView.getInvoiceAddress() %}
{% if isset( invadr.oxuser__oxbirthdate.month ) %}
    {% set iBirthdayMonth = invadr.oxuser__oxbirthdate.month %}
{% elseif oxcmp_user.oxuser__oxbirthdate.value and oxcmp_user.oxuser__oxbirthdate.value != "0000-00 - 00" %}
    {% set iBirthdayMonth = oxcmp_user.oxuser__oxbirthdate.value|regex_replace("/^([0-9]{4)})[-]/":""|regex_replace("/[-]([0-9]{1,) 2})$/":"" %}
{% else %}
    {% set iBirthdayMonth = 0 %}
{% endif %}

{% if isset( invadr.oxuser__oxbirthdate.day ) %}
    {% set iBirthdayDay = invadr.oxuser__oxbirthdate.day %}
{% elseif oxcmp_user.oxuser__oxbirthdate.value and oxcmp_user.oxuser__oxbirthdate.value != "0000-00 - 00" %}
    {% set iBirthdayDay = oxcmp_user.oxuser__oxbirthdate.value|regex_replace("/^([0-9]{4)})[-]([0-9]{1, 2})[-]/":"" %}
{% else %}
    {% set iBirthdayDay = 0 %}
{% endif %}

{% if isset( invadr.oxuser__oxbirthdate.year ) %}
    {% set iBirthdayYear = invadr.oxuser__oxbirthdate.year %}
{% elseif oxcmp_user.oxuser__oxbirthdate.value and oxcmp_user.oxuser__oxbirthdate.value != "0000-00 - 00" %}
    {% set iBirthdayYear = oxcmp_user.oxuser__oxbirthdate.value|regex_replace("/[-]([0-9]{1,) 2})[-]([0-9]{1, 2})$/":"" %}
{% else %}
    {% set iBirthdayYear = 0 %}
{% endif %}

<form id="payment-form-sepa-secured" class="js-oxValidate form-horizontal" novalidate="novalidate">
    <br />
    <div class="form-group row oxDate {% if not iBirthdayMonth or not iBirthdayDay or not iBirthdayYear %}text-danger{% endif %}">
        <label class="col-12 col-lg-3 req" for="oxDay">{{ translate({ ident: "BIRTHDATE" }) }}</label>
        <div class="col-3 col-lg-3">
            <input id="birthdate_day" class="oxDay form-control" type="text" maxlength="2" value="{% if iBirthdayDay > 0 %}{{ iBirthdayDay }}{% endif %}"
                   placeholder="{{ translate({ ident: "DAY" }) }}" required />
        </div>
        <div class="col-6 col-lg-3">
            <select id="birthdate_month" class="oxMonth form-control selectpicker" required>
                <option value="" label="-">-</option>
                {% for month in 1..13 %}
                    <option value="[{loop.index0" {% if %} selected="selected" {% endif %}>
                        {{ translate({ ident: "MONTH_NAME_"|cat(smarty.section.month.index) }) }}
                    </option>
                {% endfor %}
            </select>
        </div>
        <div class="col-3 col-lg-3">
            <input id="birthdate_year" class="oxYear form-control" type="text" maxlength="4" value="{% if iBirthdayYear %}{{ iBirthdayYear }}{% endif %}"
                   placeholder="{{ translate({ ident: "YEAR" }) }}" required />
        </div>
        <div class="offset-lg-3 col-lg-9 col-12">
            <div class="help-block">
                <p class="text-danger {% if iBirthdayMonth and iBirthdayDay and iBirthdayYear %}d-none hidden{% endif %}">{{ translate({ ident: "DD_FORM_VALIDATION_REQUIRED" }) }}</p>
            </div>
        </div>
    </div>
    <div id="sepa-secured-IBAN" class="field">
        <!-- The IBAN field UI Element will be inserted here -->
    </div>
    <br />
    <div id="payment-sepa-confirm">
        <div class="sepaagreement" id="sepaagree_unzer">
            <input id="oscunzersepaagreement" type="checkbox" name="oscunzersepaagreement" value="0">
            <label for="oscunzersepaagreement">
                {% ifcontent ident "oscunzersepamandateconfirmation" set oCont %}
                    {{ oCont.oxcontents__oxcontent.value }}
                {% endifcontent %}
            </label>
        </div>
    </div>

    <div class="field" id="error-holder" style="color: #9f3a38"> </div>

</form>

{% capture assign = "unzerSepaDirectSecurredJS" %}
{% if false %}<script>{% endif %}
    // Create an Unzer instance with your public key
    let unzerInstance = new unzer('{{ unzerpub }}', { locale: "{{ unzerLocale }}" });

    // Create a SEPA Direct Debit Secured instance and render the form
    let SepaDirectDebitSecured = unzerInstance.SepaDirectDebitSecured();
    SepaDirectDebitSecured.create('sepa-direct-debit-secured', {
        containerId: 'sepa-secured-IBAN'
    });

    // Handling payment form submission
    document.getElementById("payment-form-sepa-secured").addEventListener("submit", function(event) {
        event.preventDefault();

        if (!document.querySelector('.oxDate').classList.contains("text-danger") &&
            document.getElementById('oscunzersepaagreement').checked) {

            // Creating a SEPA resource
            SepaDirectDebitSecured.createResource()
                .then(function(result) {
                    let hiddenInput = document.createElement('input');
                    hiddenInput.setAttribute('type', 'hidden');
                    hiddenInput.setAttribute('name', 'paymentData');
                    hiddenInput.value = JSON.stringify(result);
                    document.querySelector('#orderConfirmAgbBottom .hidden').appendChild(hiddenInput);

                    let hiddenInput2 = document.createElement('input');
                    hiddenInput2.setAttribute('type', 'hidden');
                    hiddenInput2.setAttribute('name', 'sepaConfirmation');
                    hiddenInput2.value = document.getElementById('oscunzersepaagreement').checked ? '1' : '0';
                    document.querySelector('#orderConfirmAgbBottom .hidden').appendChild(hiddenInput2);

                    let hiddenInputBirthdate = document.createElement('input');
                    hiddenInputBirthdate.setAttribute('type', 'hidden');
                    hiddenInputBirthdate.setAttribute('name', 'birthdate');
                    hiddenInputBirthdate.value = document.getElementById('birthdate_year').value + '-' +
                        document.getElementById('birthdate_month').value + '-' +
                        document.getElementById('birthdate_day').value;
                    document.querySelector('#orderConfirmAgbBottom .hidden').appendChild(hiddenInputBirthdate);

                    document.getElementById('orderConfirmAgbBottom').classList.add("submitable");
                    document.getElementById("orderConfirmAgbBottom").submit();
                })
                .catch(function(error) {
                    document.getElementById('error-holder').textContent = error.message;
                    window.scrollTo({
                        top: document.getElementById("orderPayment").getBoundingClientRect().top - 150,
                        behavior: 'smooth'
                    });
                });
        } else {
            window.scrollTo({
                top: document.getElementById("orderPayment").getBoundingClientRect().top - 150,
                behavior: 'smooth'
            });
        }
    });

    document.getElementById('orderConfirmAgbBottom').addEventListener("submit", function(event) {
        if (!document.getElementById('orderConfirmAgbBottom').classList.contains("submitable")) {
            event.preventDefault();
            document.getElementById("payment-form-sepa-secured").submit();
        }
        document.querySelector('#orderConfirmAgbBottom .submitButton').disabled = true;
    });

{% if false %}</script>{% endif %}
{% endcapture %}
{{ script({ add: unzerSepaDirectSecurredJS, dynamic: __oxid_include_dynamic }) }}
